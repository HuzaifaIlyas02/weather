package com.example.model.db;

import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "MultipleDaysWeather".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class MultipleDaysWeatherCursor extends Cursor<MultipleDaysWeather> {
    @Internal
    static final class Factory implements CursorFactory<MultipleDaysWeather> {
        @Override
        public Cursor<MultipleDaysWeather> createCursor(io.objectbox.Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new MultipleDaysWeatherCursor(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final MultipleDaysWeather_.MultipleDaysWeatherIdGetter ID_GETTER = MultipleDaysWeather_.__ID_GETTER;


    private final static int __ID_dt = MultipleDaysWeather_.dt.id;
    private final static int __ID_weatherId = MultipleDaysWeather_.weatherId.id;
    private final static int __ID_minTemp = MultipleDaysWeather_.minTemp.id;
    private final static int __ID_maxTemp = MultipleDaysWeather_.maxTemp.id;

    public MultipleDaysWeatherCursor(io.objectbox.Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, MultipleDaysWeather_.__INSTANCE, boxStore);
    }

    @Override
    public long getId(MultipleDaysWeather entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    @SuppressWarnings({"rawtypes", "unchecked"}) 
    @Override
    public long put(MultipleDaysWeather entity) {
        long __assignedId = collect002033(cursor, entity.getId(), PUT_FLAG_FIRST | PUT_FLAG_COMPLETE,
                __ID_dt, entity.getDt(), __ID_weatherId, entity.getWeatherId(),
                0, 0, 0, 0,
                0, 0, __ID_minTemp, entity.getMinTemp(),
                __ID_maxTemp, entity.getMaxTemp(), 0, 0);

        entity.setId(__assignedId);

        return __assignedId;
    }

}
